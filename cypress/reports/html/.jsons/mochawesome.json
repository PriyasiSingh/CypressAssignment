{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-07T12:49:31.090Z",
    "end": "2023-04-07T12:49:55.890Z",
    "duration": 24800,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "47ba0177-5eb9-4048-8be1-f7debbd2c061",
      "title": "",
      "fullFile": "cypress/e2e/Registration.cy.js",
      "file": "cypress/e2e/Registration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13d637fa-2fd6-4f36-b6eb-26a86612268e",
          "title": "Verify the registration form by testing it with valid, invalid, and empty inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration form with valid input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with valid input",
              "timedOut": null,
              "duration": 13551,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone(this.data.phone);\nregistration.selectGender();\ncy.get('input[type=\"checkbox\"]').click({\n  multiple: true\n});\nregistration.selectSkills(this.data.skill);\nregistration.selectCountry(this.data.country);\nregistration.enterfirstPassword(this.data.firstPassword);\nregistration.entersecondPassword(this.data.secondPassword);\nregistration.clickSubmit();\ncy.get('#countries:invalid').invoke('prop', 'validationMessage').should('equal', 'Please select an item in the list.');\n//if it would have passed\n//cy.get('h2').should('have.value','Registartion success')",
              "err": {},
              "uuid": "915e8894-6e97-4450-8828-bbf949cc3c40",
              "parentUUID": "13d637fa-2fd6-4f36-b6eb-26a86612268e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration form with invalid input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with invalid input",
              "timedOut": null,
              "duration": 4055,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\n//invalid email ID\nregistration.enterEmailID('priyasisingh');\nregistration.clickSubmit();\ncy.get('#eid > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please include an \\'@\\' in the email address. \\'priyasisingh\\' is missing an \\'@\\'.');\n//invalid gender\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone('234');\nregistration.clickSubmit();\ncy.get(':nth-child(4) > .col-md-4 > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please match the format requested.');",
              "err": {},
              "uuid": "77daab50-0012-47ec-8e33-b50bca35be2b",
              "parentUUID": "13d637fa-2fd6-4f36-b6eb-26a86612268e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration form with empty input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with empty input",
              "timedOut": null,
              "duration": 6001,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\n//empty firstaname\nregistration.enterFirstname('');\nregistration.clickSubmit();\ncy.get(':nth-child(1) > :nth-child(2) > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please fill in this field.');\n//empty gender\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone(this.data.phone);\nregistration.clickSubmit();\ncy.get(':nth-child(5) > .col-md-4 > :nth-child(1) > input:invalid').invoke('prop', 'validationMessage').should('equal', 'Please select one of these options.');",
              "err": {},
              "uuid": "9aa28312-4ac0-4e3e-be70-060b7b5388ed",
              "parentUUID": "13d637fa-2fd6-4f36-b6eb-26a86612268e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "915e8894-6e97-4450-8828-bbf949cc3c40",
            "77daab50-0012-47ec-8e33-b50bca35be2b",
            "9aa28312-4ac0-4e3e-be70-060b7b5388ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}