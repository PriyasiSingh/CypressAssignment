{
  "stats": {
    "suites": 15,
    "tests": 36,
    "passes": 32,
    "pending": 0,
    "failures": 3,
    "testsRegistered": 36,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true,
    "start": "2023-04-19T07:45:17.648Z",
    "end": "2023-04-19T07:50:11.362Z",
    "duration": 293714
  },
  "results": [
    {
      "uuid": "77a9d171-a90b-490d-97bd-80dcd6f25d6e",
      "title": "",
      "fullFile": "cypress/e2e/Registration.cy.js",
      "file": "cypress/e2e/Registration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c59ed7a-2ce9-4dc1-9e7c-703b1491b8e7",
          "title": "Verify the registration form by testing it with valid, invalid, and empty inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration form with valid input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with valid input",
              "timedOut": null,
              "duration": 10536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone(this.data.phone);\nregistration.selectGender();\ncy.get('input[type=\"checkbox\"]').click({\n  multiple: true\n});\n//selecting language\ncy.get(\"#msdd\").click();\ncy.get('a[class=\"ui-corner-all\"]').each(function ($ele, index, $list) {\n  if ($ele.text() == 'English') {\n    cy.wrap($ele).click({\n      force: true\n    });\n  } else {\n    cy.log($ele.text());\n  }\n});\ncy.get('#section > .container > .row').click();\nregistration.selectSkills(this.data.skill);\nregistration.selectCountry(this.data.country);\nregistration.enterfirstPassword(this.data.firstPassword);\nregistration.entersecondPassword(this.data.secondPassword);\nregistration.clickSubmit();\ncy.get('#countries:invalid').invoke('prop', 'validationMessage').should('equal', 'Please select an item in the list.');\n//if it would have passed\n//cy.get('h2').should('have.value','Registartion success')",
              "err": {},
              "uuid": "9711b2a9-9db0-44e4-a791-1695078fb6a7",
              "parentUUID": "5c59ed7a-2ce9-4dc1-9e7c-703b1491b8e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration form with invalid input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with invalid input",
              "timedOut": null,
              "duration": 4576,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\n//invalid email ID\nregistration.enterEmailID('priyasisingh');\nregistration.clickSubmit();\ncy.get('#eid > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please include an \\'@\\' in the email address. \\'priyasisingh\\' is missing an \\'@\\'.');\n//invalid phone\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone('234');\nregistration.clickSubmit();\ncy.get(':nth-child(4) > .col-md-4 > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please match the format requested.');",
              "err": {},
              "uuid": "d91301ce-613e-4b64-9db4-8faff66e8ec8",
              "parentUUID": "5c59ed7a-2ce9-4dc1-9e7c-703b1491b8e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration form with empty input",
              "fullTitle": "Verify the registration form by testing it with valid, invalid, and empty inputs Registration form with empty input",
              "timedOut": null,
              "duration": 4083,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const registration = new _RegistrationFields.RegistrationFields();\n//empty firstaname\nregistration.enterFirstname('');\nregistration.clickSubmit();\ncy.get(':nth-child(1) > :nth-child(2) > .form-control:invalid').invoke('prop', 'validationMessage').should('equal', 'Please fill in this field.');\n//empty gender\nregistration.enterFirstname(this.data.firstName);\nregistration.enterLastname(this.data.lastName);\nregistration.enterEmailID(this.data.emailID);\nregistration.enterPhone(this.data.phone);\nregistration.clickSubmit();\ncy.get(':nth-child(5) > .col-md-4 > :nth-child(1) > input:invalid').invoke('prop', 'validationMessage').should('equal', 'Please select one of these options.');",
              "err": {},
              "uuid": "082043a3-e19e-4f5d-865b-8ef1bb394b31",
              "parentUUID": "5c59ed7a-2ce9-4dc1-9e7c-703b1491b8e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9711b2a9-9db0-44e4-a791-1695078fb6a7",
            "d91301ce-613e-4b64-9db4-8faff66e8ec8",
            "082043a3-e19e-4f5d-865b-8ef1bb394b31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "020c8615-f4c7-484b-babd-4a412f6c4ec0",
      "title": "",
      "fullFile": "cypress/e2e/VisualTestPractice_Percy.cy.js",
      "file": "cypress/e2e/VisualTestPractice_Percy.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6fa2ef9-7a0b-4430-bec6-87946b363590",
          "title": "Verify the functionality of both static drag and drop options with Visual test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify static drag & drop",
              "fullTitle": "Verify the functionality of both static drag and drop options with Visual test Verify static drag & drop",
              "timedOut": null,
              "duration": 2386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Static.html');\n//drag the first logo in the field\ncy.get('#angular').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #angular').should('have.attr', 'id', 'angular');\n//dragging the second logo\ncy.get('#mongo').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #mongo').should('have.attr', 'id', 'mongo');\n//dragging the third logo\ncy.get('#node').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\n// cy.get('#node').drag('#droparea')\ncy.get('.dragged > #node').should('have.attr', 'id', 'node');\ncy.percySnapshot();",
              "err": {},
              "uuid": "b1fe2610-d678-4b0f-9c0b-566da86cce62",
              "parentUUID": "e6fa2ef9-7a0b-4430-bec6-87946b363590",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1fe2610-d678-4b0f-9c0b-566da86cce62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2386,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74a36539-5eda-4434-bb67-15bf7ff598e0",
      "title": "",
      "fullFile": "cypress/e2e/WYSIWYG.cy.js",
      "file": "cypress/e2e/WYSIWYG.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1e4efd22-a01e-4fd4-be81-37ad32b384f5",
          "title": "Verify the format options, image and table properties in the CKEditor under the WYSIWYG menu",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the format option in CKEditor",
              "fullTitle": "Verify the format options, image and table properties in the CKEditor under the WYSIWYG menu Verify the format option in CKEditor",
              "timedOut": null,
              "duration": 2662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.frameLoaded('.cke_wysiwyg_frame').should('be.visible');\ncy.iframe('.cke_wysiwyg_frame').clear().type('Cypress Testing {selectAll}');\ncy.get('#cke_35').click(); //bold\ncy.get('#cke_36').click(); //italic\ncy.get('#cke_13').click(); //copy(not permitted)    \n//assertion\ncy.iframe('.cke_wysiwyg_frame').should('contain.text', 'Cypress Testing').and('contain.html', 'strong');",
              "err": {},
              "uuid": "14475491-9071-44fc-b25b-2cf07992472d",
              "parentUUID": "1e4efd22-a01e-4fd4-be81-37ad32b384f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the image option in CKEditor",
              "fullTitle": "Verify the format options, image and table properties in the CKEditor under the WYSIWYG menu Verify the image option in CKEditor",
              "timedOut": null,
              "duration": 1864,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.frameLoaded('.cke_wysiwyg_frame').should('be.visible');\ncy.iframe('.cke_wysiwyg_frame').clear();\ncy.get('#cke_26').click(); //adding image\n//capturing the opened window\ncy.window().then(win => {\n  cy.stub(win, 'open').as('WinOpen');\n});\n//adding the url for the image\ncy.get('#cke_76_textInput').type('https://www.cypress.io/cypress_logo_social.png');\ncy.get('#cke_134_label').click();\n//verifying correct image is loadeed\ncy.get('.cke_wysiwyg_frame').then($editor => {\n  const $editorData = $editor.contents().find('body > p');\n  cy.wrap($editorData).find('img').should('have.attr', 'src').and('include', 'cypress_logo_social');\n});",
              "err": {},
              "uuid": "130f01e0-4576-4043-a09f-a8a8a6b81d70",
              "parentUUID": "1e4efd22-a01e-4fd4-be81-37ad32b384f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the table properties in CKEditor",
              "fullTitle": "Verify the format options, image and table properties in the CKEditor under the WYSIWYG menu Verify the table properties in CKEditor",
              "timedOut": null,
              "duration": 1927,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.frameLoaded('.cke_wysiwyg_frame').should('be.visible');\ncy.iframe('.cke_wysiwyg_frame').clear();\ncy.get('#cke_27').click(); //adding table\n//capturing the opened window\ncy.window().then(win => {\n  cy.stub(win, 'open').as('WinOpen');\n});\n//setting properties for the table\ncy.get('#cke_71_textInput').clear().type('3');\ncy.get('#cke_74_textInput').clear().type('2');\ncy.get('#cke_78_select').select('row');\ncy.get('#cke_84_select').select('center');\ncy.get('#cke_118_label').click();\n//verifying table is added\ncy.get('.cke_wysiwyg_frame').then($editor => {\n  const $editorData = $editor.contents().find('body > table');\n  cy.wrap($editorData).should('contain.html', 'thead');\n});",
              "err": {},
              "uuid": "891c5a8c-7669-48e8-badd-7afbc3a07efd",
              "parentUUID": "1e4efd22-a01e-4fd4-be81-37ad32b384f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14475491-9071-44fc-b25b-2cf07992472d",
            "130f01e0-4576-4043-a09f-a8a8a6b81d70",
            "891c5a8c-7669-48e8-badd-7afbc3a07efd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c6cfb94-9e62-4660-a88f-dbbacb433f24",
      "title": "",
      "fullFile": "cypress/e2e/alerts.cy.js",
      "file": "cypress/e2e/alerts.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "adb213e9-81d5-4e36-ad68-97740cde85d9",
          "title": "Access the alerts and verify the functionality of the three alert options provided",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Alert with OK",
              "fullTitle": "Access the alerts and verify the functionality of the three alert options provided Verify Alert with OK",
              "timedOut": null,
              "duration": 3444,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Alert with OK').click();\ncy.get('#OKTab > .btn').click();\n//validating alert message    \ncy.on('window:alert', alertText => {\n  expect(alertText).to.contains('I am an alert box!');\n});\n//verifying if cursor can click another element on webpage\ncy.get(\"[href='#CancelTab']\").click();",
              "err": {},
              "uuid": "f96875c9-a0bb-442b-8238-b68c8fef64b5",
              "parentUUID": "adb213e9-81d5-4e36-ad68-97740cde85d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Confirm box",
              "fullTitle": "Access the alerts and verify the functionality of the three alert options provided Verify Confirm box",
              "timedOut": null,
              "duration": 1466,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[href='#CancelTab']\").click();\ncy.get('.btn-primary').click();\n//validating confirm text\ncy.on('window:confirm', confirmText => {\n  //assertions\n  expect(confirmText).to.contains('Press a Button !');\n  return true;\n});\ncy.get('#demo').contains('You pressed Ok');\n//verifying if cursor can click another element on webpage\ncy.get(\"[href='#Textbox']\").click();",
              "err": {},
              "uuid": "c2bd78d8-83bf-40ee-be44-a95051ec4eec",
              "parentUUID": "adb213e9-81d5-4e36-ad68-97740cde85d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify prompt box",
              "fullTitle": "Access the alerts and verify the functionality of the three alert options provided Verify prompt box",
              "timedOut": null,
              "duration": 5260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[href='#Textbox']\").click();\ncy.get('.btn-info').click();\n//validating prompt text and entering data\ncy.window().then(function (promptWin) {\n  cy.stub(promptWin, 'prompt').returns('Mr.Bean');\n  cy.contains('Please enter your name').click();\n});\n// cy.window().then(function (win) {\n//     cy.stub(win, 'prompt').returns('Mr.Bean')\n//     cy.get('#demo').then(($demo) => {\n//         const oldAlert = win.alert\n//         win.alert = function (msg) {\n//             $demo.text(msg)\n//             oldAlert.call(win, msg)\n//         }\n//         cy.get('#prompt-demo').click()\n//     })\n// })\ncy.get('#demo1').contains('Hello Mr.Bean How are you today ');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter your name' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter your name' but never did.\n    at Context.eval (webpack:///./cypress/e2e/alerts.cy.js:51:15)",
                "diff": null
              },
              "uuid": "ebb14bd0-d767-4a0c-ba10-083375ab475d",
              "parentUUID": "adb213e9-81d5-4e36-ad68-97740cde85d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f96875c9-a0bb-442b-8238-b68c8fef64b5",
            "c2bd78d8-83bf-40ee-be44-a95051ec4eec"
          ],
          "failures": [
            "ebb14bd0-d767-4a0c-ba10-083375ab475d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a38765b3-8324-49af-94db-2ae2bd24141b",
      "title": "",
      "fullFile": "cypress/e2e/dragNdrop.cy.js",
      "file": "cypress/e2e/dragNdrop.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ea9b905-07d5-4e4b-b637-2d7f9f713e78",
          "title": "Verify the functionality of both static and dynamic drag and drop options",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify static drag & drop",
              "fullTitle": "Verify the functionality of both static and dynamic drag and drop options Verify static drag & drop",
              "timedOut": null,
              "duration": 2201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Static.html');\n//drag the first logo in the field\ncy.get('#angular').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #angular').should('have.attr', 'id', 'angular');\n//dragging the second logo\ncy.get('#mongo').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #mongo').should('have.attr', 'id', 'mongo');\n//dragging the third logo\ncy.get('#node').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\n// cy.get('#node').drag('#droparea')\ncy.get('.dragged > #node').should('have.attr', 'id', 'node');",
              "err": {},
              "uuid": "0ec0310f-daa4-43e6-9f6e-63aa43fe62ff",
              "parentUUID": "5ea9b905-07d5-4e4b-b637-2d7f9f713e78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dynamic drag & drop",
              "fullTitle": "Verify the functionality of both static and dynamic drag and drop options Verify dynamic drag & drop",
              "timedOut": null,
              "duration": 1057,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Dynamic.html');\n//drag the first logo in the field\ncy.get('#angular').drag('#droparea').then(success => {\n  assert.isTrue(success);\n});\ncy.get('.dragged > #angular').should('have.attr', 'id', 'angular');\n//dragging the second logo\ncy.get('#mongo').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #mongo').should('have.attr', 'id', 'mongo');\n//dragging the third logo\ncy.get('#node').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\n// cy.get('#node').drag('#droparea')\ncy.get('.dragged > #node').should('have.attr', 'id', 'node');",
              "err": {},
              "uuid": "e1d4b134-c05b-4930-90c4-b88fc72960d0",
              "parentUUID": "5ea9b905-07d5-4e4b-b637-2d7f9f713e78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ec0310f-daa4-43e6-9f6e-63aa43fe62ff",
            "e1d4b134-c05b-4930-90c4-b88fc72960d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "09aa7e91-7340-40e0-9b63-1624012c80a0",
      "title": "",
      "fullFile": "cypress/e2e/dynamicData.cy.js",
      "file": "cypress/e2e/dynamicData.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "03088b2d-5ed7-4850-a5b3-accba0ac0c40",
          "title": "verify the dynamic data functionality for at least three instances",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the dynamic data",
              "fullTitle": "verify the dynamic data functionality for at least three instances Verify the dynamic data",
              "timedOut": null,
              "duration": 8456,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/DynamicData.html');\n// cy.get('#save').click()\ncy.intercept({\n  method: 'GET',\n  url: ' https://api.randomuser.me/?nat=us'\n}).as('randomData');\n//looping for 3 random user clicks\nfor (let i = 0; i < 3; i++) {\n  cy.get('#save').click();\n  cy.wait('@randomData').its('response.statusCode').should('eq', 200);\n  cy.get('#loading > img').should('have.attr', 'src').and('include', 'https://randomuser.me/api/portraits/');\n}",
              "err": {},
              "uuid": "21f0812a-1faf-4299-9fd6-3751c33a105c",
              "parentUUID": "03088b2d-5ed7-4850-a5b3-accba0ac0c40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21f0812a-1faf-4299-9fd6-3751c33a105c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8456,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a7be03b-3fa0-4d96-9af2-17eef736e42a",
      "title": "",
      "fullFile": "cypress/e2e/iframes.cy.js",
      "file": "cypress/e2e/iframes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "245e4cd9-73a0-42b0-a494-1963a22faaad",
          "title": "Access the frames and verify the functionality of both single and nested iframes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Single frame",
              "fullTitle": "Access the frames and verify the functionality of both single and nested iframes Verify Single frame",
              "timedOut": null,
              "duration": 2739,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[href='#Single']\").click().should('be.visible');\n//accessing frame & its element\ncy.get('#singleframe').should('be.visible').then($iframe => {\n  const $body = $iframe.contents().find('body');\n  cy.wrap($body).find(`input[type='text']`).should('be.visible').type('Cypress{enter}');\n  cy.wrap($body).click();\n});",
              "err": {},
              "uuid": "4708c38b-e957-414c-83b7-ccd6a8873b65",
              "parentUUID": "245e4cd9-73a0-42b0-a494-1963a22faaad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Nested frame",
              "fullTitle": "Access the frames and verify the functionality of both single and nested iframes Verify Nested frame",
              "timedOut": null,
              "duration": 1153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[href='#Multiple']\").click().should('be.visible');\n//accessing the first iframe\ncy.get('#Multiple > iframe').then($firstIframe => {\n  const $secondIframeReference = $firstIframe.contents().find('body > section > div > div > iframe');\n  // Saving this as a reference for further use\n  cy.wrap($secondIframeReference).as('secondIframeReference');\n  //accessing the second iframe\n  cy.get('@secondIframeReference').then($secondIframe => {\n    const $elementYouWant = $secondIframe.contents().find('body');\n    cy.wrap($elementYouWant).find(`input[type='text']`).type(\"Cypress2\");\n    cy.wrap($elementYouWant).click();\n  });\n});",
              "err": {},
              "uuid": "d74cd3dc-ce71-4c8a-a938-d451cf2a420b",
              "parentUUID": "245e4cd9-73a0-42b0-a494-1963a22faaad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4708c38b-e957-414c-83b7-ccd6a8873b65",
            "d74cd3dc-ce71-4c8a-a938-d451cf2a420b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "07a37f54-b2c0-44d5-8816-73ef96b67158",
      "title": "",
      "fullFile": "cypress/e2e/modal.cy.js",
      "file": "cypress/e2e/modal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5740917-2d2b-4ee2-ad08-fdb78d817395",
          "title": "Verify the functionality of Multiple modals",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the functionality of Bootstrap modal",
              "fullTitle": "Verify the functionality of Multiple modals Verify the functionality of Bootstrap modal",
              "timedOut": null,
              "duration": 3285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[href=\"#myModal\"]').click();\ncy.get('#myModal > .modal-dialog').should('be.visible');\ncy.get('#myModal > .modal-dialog > .modal-content > .modal-header > .close').should('be.enabled');\ncy.get('#myModal > .modal-dialog > .modal-content > .modal-header > .modal-title').should('be.visible').and('contain.text', 'title');\ncy.get('#myModal > .modal-dialog > .modal-content > .modal-body').should('not.be.empty');\ncy.get('#myModal > .modal-dialog > .modal-content > .modal-body > .btn').should('be.enabled');\ncy.get('.modal-footer > .btn-default').should('be.enabled');\ncy.get('#myModal > .modal-dialog > .modal-content > .modal-footer > .btn-primary').click();",
              "err": {},
              "uuid": "976eb794-6af7-4c62-8c6f-5b2246c97c3c",
              "parentUUID": "f5740917-2d2b-4ee2-ad08-fdb78d817395",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the functionality of the multiple modal",
              "fullTitle": "Verify the functionality of Multiple modals Verify the functionality of the multiple modal",
              "timedOut": null,
              "duration": 3115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[href=\"#myModalMulti\"]').click();\ncy.get('#myModalMulti > .modal-dialog').should('be.visible');\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-header').should('be.visible').and('contain.text', 'First Modal');\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-header > .close').should('be.enabled');\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-body > .btn').should('be.visible');\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-footer > [data-dismiss=\"modal\"]').should('be.visible');\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-footer > .btn-primary').should('be.visible');\n//verifying inside the first modal\ncy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-body > .btn').click().then(() => {\n  cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-header > .modal-title').should('be.visible').and('contain.text', 'Modal 2');\n  cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-header > .close').should('be.visible');\n  cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-body').should('be.visible');\n  //checking the second modal close button functionality\n  cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-footer > [data-dismiss=\"modal\"]').should('be.visible').click();\n  cy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-footer > .btn-primary').should('be.visible');\n  //checking the second modal save functionality\n  cy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-footer > [data-dismiss=\"modal\"]').click();\n  cy.get('[href=\"#myModalMulti\"]').click();\n  cy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-body > .btn').click().then(() => {\n    cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-header > .modal-title').should('be.visible').and('contain.text', 'Modal 2');\n    cy.get('#myModal2 > .modal-dialog > .modal-content > .modal-footer > .btn-primary').click().then(() => {\n      cy.get('#myModalMulti > .modal-dialog > .modal-content > .modal-footer > .btn-primary').should('not.be.visible');\n    });\n  });\n});",
              "err": {},
              "uuid": "16858953-a156-499f-b260-f70ae3d823a3",
              "parentUUID": "f5740917-2d2b-4ee2-ad08-fdb78d817395",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "976eb794-6af7-4c62-8c6f-5b2246c97c3c",
            "16858953-a156-499f-b260-f70ae3d823a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c207b6a-297c-4ae7-bf23-69ad5759412f",
      "title": "",
      "fullFile": "cypress/e2e/moreBarFunctionality.cy.js",
      "file": "cypress/e2e/moreBarFunctionality.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d7151c3-482b-416b-9796-d9c2953ef46c",
          "title": "Verify the functionality of the JqueryProgressBar, Loader, and Progress bar",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the functionality of the JqueryProgressBar",
              "fullTitle": "Verify the functionality of the JqueryProgressBar, Loader, and Progress bar Verify the functionality of the JqueryProgressBar",
              "timedOut": null,
              "duration": 11542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/JqueryProgressBar.html');\ncy.get('#downloadButton').click();\n//canceling\ncy.get('.ui-progressbar-overlay').should('be.visible');\ncy.get('.progress-label').should('contain.text', 'Current Progress');\ncy.get('.ui-dialog-buttonset > button').should('contain.text', 'Cancel').click();\ncy.get('#downloadButton').should('be.enabled');\n//aftercompleting\ncy.get('#downloadButton').click().then(() => {\n  cy.get('#progressbar', {\n    timeout: 10000\n  }).should($progressBar => {\n    expect($progressBar).to.have.attr('aria-valuenow', '100');\n  }).as('progressBarValue');\n});\ncy.get('@progressBarValue').then(() => {\n  cy.get('.progress-label').should('have.text', 'Complete!').then(() => {\n    cy.get('.ui-dialog-buttonset > button').should('have.text', 'Close');\n  });\n  cy.get('.ui-dialog-buttonset > button').click();\n});\n//once dialogue is closed\ncy.get('#downloadButton').should('be.enabled');",
              "err": {},
              "uuid": "05fb3574-c3c3-4fe4-a86a-ba90bca070b6",
              "parentUUID": "1d7151c3-482b-416b-9796-d9c2953ef46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the functionality of the Loader",
              "fullTitle": "Verify the functionality of the JqueryProgressBar, Loader, and Progress bar Verify the functionality of the Loader",
              "timedOut": null,
              "duration": 28069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Loader.html');\ncy.get('#loader').click().then(() => {\n  cy.get('.blockMsg > h1').should('contain.text', 'Please wait').then(() => {\n    cy.get('.modal-title', {\n      timeout: 25000\n    }).should('be.visible').should('contain.text', 'title');\n    cy.get('.close').should('be.visible');\n    cy.get('p').should('be.visible');\n    cy.get('.btn-default').should('be.visible');\n    cy.get('.modal-footer > .btn-primary').should('be.visible').click();\n    cy.get('.modal-content').should('not.be.visible');\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 25000ms: expected '<h4.modal-title>' to be 'visible'\n\nThis element `<h4.modal-title>` is not visible because its parent `<div#myModal.modal.fade>` has CSS property: `display: none`",
                "estack": "AssertionError: Timed out retrying after 25000ms: expected '<h4.modal-title>' to be 'visible'\n\nThis element `<h4.modal-title>` is not visible because its parent `<div#myModal.modal.fade>` has CSS property: `display: none`\n    at Context.eval (webpack:///./cypress/e2e/moreBarFunctionality.cy.js:41:59)",
                "diff": null
              },
              "uuid": "3af07f8c-77b8-4649-bec8-9cb6eff7b01e",
              "parentUUID": "1d7151c3-482b-416b-9796-d9c2953ef46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the functionality of the ProgressBar",
              "fullTitle": "Verify the functionality of the JqueryProgressBar, Loader, and Progress bar Verify the functionality of the ProgressBar",
              "timedOut": null,
              "duration": 11631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/ProgressBar.html');\ncy.get('#cricle-btn').click().then(() => {\n  cy.get('.progressbar-text', {\n    timeout: 10000\n  }).should('contain.text', '100');\n});",
              "err": {},
              "uuid": "2b5079a9-0470-4727-acbb-19b6a682ba83",
              "parentUUID": "1d7151c3-482b-416b-9796-d9c2953ef46c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05fb3574-c3c3-4fe4-a86a-ba90bca070b6",
            "2b5079a9-0470-4727-acbb-19b6a682ba83"
          ],
          "failures": [
            "3af07f8c-77b8-4649-bec8-9cb6eff7b01e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 51242,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f2bd9f9f-8419-4fb3-99a1-7b61a9f29bcb",
      "title": "",
      "fullFile": "cypress/e2e/selectableNresizable.cy.js",
      "file": "cypress/e2e/selectableNresizable.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32d0dbb9-4ae0-4c4e-bd60-b87144f35f82",
          "title": "Verify the selectable and resizable features",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify selectable feature",
              "fullTitle": "Verify the selectable and resizable features Verify selectable feature",
              "timedOut": null,
              "duration": 7894,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Selectable.html');\n//Verify default behaviour of selectable feature\ncy.get('[href=\"#Default\"]').click();\ncy.get('ul.deaultFunc li.ui-widget-content').each($ele => {\n  cy.wrap($ele).click();\n  cy.get('ul.deaultFunc li.selected').should('have.attr', 'class').and('include', 'selected');\n});\n//Verify serialize behaviour of selectable feature\ncy.get('[href=\"#Serialize\"]').click();\ncy.get('ul.SerializeFunc li.ui-widget-content').each($ele => {\n  cy.wrap($ele).click();\n  const text = cy.get('ul.SerializeFunc li.selected b').then($data => {\n    // store the button's text\n    const dataText = $data.text();\n    cy.log(dataText);\n    cy.get('#feedback #result').then($result => {\n      const resultData = $data.text();\n      cy.log(resultData);\n      assert.equal(dataText, resultData);\n    });\n  });\n});",
              "err": {},
              "uuid": "7a28e5ef-16f6-4347-a940-84c337f83938",
              "parentUUID": "32d0dbb9-4ae0-4c4e-bd60-b87144f35f82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify resizable element",
              "fullTitle": "Verify the selectable and resizable features Verify resizable element",
              "timedOut": null,
              "duration": 2289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Resizable.html');\ncy.get('#resizable').invoke('attr', 'style', 'width: 732px; height: 221px;').should('have.attr', 'style', 'width: 732px; height: 221px;');",
              "err": {},
              "uuid": "dc57278c-8af5-4877-9198-6a97ed801f43",
              "parentUUID": "32d0dbb9-4ae0-4c4e-bd60-b87144f35f82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a28e5ef-16f6-4347-a940-84c337f83938",
            "dc57278c-8af5-4877-9198-6a97ed801f43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "553baead-eb72-4f8c-a718-9766f1219c3f",
      "title": "",
      "fullFile": "cypress/e2e/summerNote.cy.js",
      "file": "cypress/e2e/summerNote.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70c4db09-70df-44e3-a103-73b1eb9f2433",
          "title": "Verify the text alignment options, background and foreground color of text in the SummerNote",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the alignment option in CKEditor",
              "fullTitle": "Verify the text alignment options, background and foreground color of text in the SummerNote Verify the alignment option in CKEditor",
              "timedOut": null,
              "duration": 3014,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.note-editable > p').should('contain.text', 'Hello Summernote');\ncy.get('div.note-btn-group.btn-group.note-para > div > button').as('AlignOption').click();\ncy.get('[data-original-title=\"Align right (⌘+⇧+R)\"] > .note-icon-align-right').invoke('show').click(); //right align\ncy.get('@AlignOption').click();\ncy.get('[data-original-title=\"Align left (⌘+⇧+L)\"] > .note-icon-align-left').invoke('show').click({\n  force: true\n}); //left align\ncy.get('@AlignOption').click();\ncy.get('[data-original-title=\"Align center (⌘+⇧+E)\"]').invoke('show').click({\n  force: true\n}); //center align  \ncy.get('@AlignOption').click();\ncy.get('[data-original-title=\"Justify full (⌘+⇧+J)\"] > .note-icon-align-justify').invoke('show').click({\n  force: true\n}); //justify align",
              "err": {},
              "uuid": "b6a8bb4d-0b34-46b1-b9e6-3b63e2fff19a",
              "parentUUID": "70c4db09-70df-44e3-a103-73b1eb9f2433",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the background & foreground colour in CKEditor",
              "fullTitle": "Verify the text alignment options, background and foreground color of text in the SummerNote Verify the background & foreground colour in CKEditor",
              "timedOut": null,
              "duration": 1334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.note-editable > p').as('textData').should('contain.text', 'Hello Summernote');\ncy.get('@textData').type('{selectAll}');\n//updating the background colour\ncy.get(':nth-child(4) > .note-btn-group > .dropdown-toggle').click();\ncy.get(':nth-child(1) > .note-holder > .note-color-palette > :nth-child(6) > [style=\"background-color:#CE0000\"]').click();\n//updating the foreground colour\ncy.get(':nth-child(4) > .note-btn-group > .dropdown-toggle').click();\ncy.get(':nth-child(2) > .note-holder > .note-color-palette > :nth-child(1) > [style=\"background-color:#EFEFEF\"]').click();\n//assertions\ncy.get('@textData').should('contain.text', 'Hello Summernote').find('font').should('have.attr', 'color', '#efefef');",
              "err": {},
              "uuid": "d8d02001-2e27-4187-bebd-de9e29025db5",
              "parentUUID": "70c4db09-70df-44e3-a103-73b1eb9f2433",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6a8bb4d-0b34-46b1-b9e6-3b63e2fff19a",
            "d8d02001-2e27-4187-bebd-de9e29025db5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f35d0aeb-3f2b-48dd-ac66-5d48b36498cb",
      "title": "",
      "fullFile": "cypress/e2e/uploadNdownload.cy.js",
      "file": "cypress/e2e/uploadNdownload.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d29498d1-6753-4dac-a24e-fffcdd123678",
          "title": "verify file upload and download functionality by generating a .txt file",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the file upload functionality",
              "fullTitle": "verify file upload and download functionality by generating a .txt file Verify the file upload functionality",
              "timedOut": null,
              "duration": 2445,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/FileUpload.html');\ncy.get('#input-4').attachFile('Data.txt');\ncy.get('.fileinput-upload').should('be.visible').and('be.enabled').click();\n//unable to assert since clicking on upload is not returning anything",
              "err": {},
              "uuid": "74aa0417-74af-40c5-b3a4-ef9297a2144a",
              "parentUUID": "d29498d1-6753-4dac-a24e-fffcdd123678",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the file download functionality",
              "fullTitle": "verify file upload and download functionality by generating a .txt file Verify the file download functionality",
              "timedOut": null,
              "duration": 8297,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/FileDownload.html');\n//Direct download\n//for page to stop waiting for another pag eto load we use the following\ncy.window().document().then(function (doc) {\n  doc.addEventListener('click', () => {\n    // this adds a listener that reloads your page \n    // after 5 seconds from clicking the download button\n    setTimeout(function () {\n      doc.location.reload();\n    }, 5000);\n  });\n});\ncy.get('.btn-primary').click();\n// cy.readFile('./cypress/downloads/samplefile.pdf').should('exist')  //causing lot of memory to read so will just check if file is generated\ncy.verifyDownload('samplefile.pdf');\n//Txt file download\ncy.get('#textbox').type('Cypress testing is the latest trend TEXT!');\ncy.get('#createTxt').should('be.enabled').click();\ncy.get('#link-to-download').should('be.visible').click();\ncy.readFile('./cypress/downloads/info.txt').should('contain', 'Cypress testing is the latest trend TEXT!');\n//pdf File download\ncy.get('#pdfbox').type('Cypress testing is the latest trend PDF!');\ncy.get('#createPdf').should('be.enabled').click();\ncy.get('#pdf-link-to-download').should('be.visible').click();\ncy.readFile('./cypress/downloads/info.pdf').should('contain', 'Cypress testing is the latest trend PDF!');",
              "err": {},
              "uuid": "a5f26831-ed9b-488a-9f22-750c9c18c638",
              "parentUUID": "d29498d1-6753-4dac-a24e-fffcdd123678",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74aa0417-74af-40c5-b3a4-ef9297a2144a",
            "a5f26831-ed9b-488a-9f22-750c9c18c638"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d2a9741d-fcbb-4ae0-b2dd-0eeeef4e34bf",
      "title": "",
      "fullFile": "cypress/e2e/videoSupport.cy.js",
      "file": "cypress/e2e/videoSupport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3256d245-a5cd-4e3a-8942-3f584d662b32",
          "title": "Verify both video options - Youtube and Vimeo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Youtube video feature",
              "fullTitle": "Verify both video options - Youtube and Vimeo Verify Youtube video feature",
              "timedOut": null,
              "duration": 13455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Youtube.html');\n//playing the video\ncy.iframe('[src=\"https://www.youtube.com/embed/wPECeNP1BoY\"]').find('.ytp-play-button').as('btn').should('have.attr', 'title').and('include', 'Play');\ncy.get('@btn').click({\n  force: true\n}).should('have.attr', 'data-title-no-tooltip').and('include', 'Pause');\ncy.wait(10000);\n//pausing the video\ncy.get('@btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "b8efe30a-b5af-4435-898a-837b89aa5afe",
              "parentUUID": "3256d245-a5cd-4e3a-8942-3f584d662b32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Vimeo video option",
              "fullTitle": "Verify both video options - Youtube and Vimeo Verify Vimeo video option",
              "timedOut": null,
              "duration": 31756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Vimeo.html');\n//playing the video\ncy.iframe('#foo').find('.PlayButton_module_playIcon__af9e9913').as('PlayBtn').should('have.attr', 'data-play-icon', 'true');\ncy.get('@PlayBtn').click();\ncy.wait(10000);\n//Pausing the video\ncy.iframe('#foo').find('.PlayButton_module_pauseIcon__af9e9913').as('PauseBtn').should('have.attr', 'data-pause-icon', 'true');\ncy.get('@PauseBtn').click();",
              "err": {},
              "uuid": "bc410e31-b135-4468-ac5d-2fcb82a05976",
              "parentUUID": "3256d245-a5cd-4e3a-8942-3f584d662b32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8efe30a-b5af-4435-898a-837b89aa5afe",
            "bc410e31-b135-4468-ac5d-2fcb82a05976"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aa2470bc-5117-4cc1-916b-edc8bfb64bc8",
      "title": "",
      "fullFile": "cypress/e2e/widgets.cy.js",
      "file": "cypress/e2e/widgets.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c21b909-58a6-4f1b-a005-1575243cd114",
          "title": "Access the widgets and verify thier functionalities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Accordion widget",
              "fullTitle": "Access the widgets and verify thier functionalities Verify Accordion widget",
              "timedOut": null,
              "duration": 2860,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Accordion.html');\ncy.get('.panel-default').then($headers => {\n  // Loop over each header and click it to expand the corresponding content\n  for (let i = 0; i < $headers.length; i++) {\n    if (i == 0) {\n      cy.wrap($headers[i]).click().should('be.visible').and('contain.text', 'Automation Testing API');\n    } else if (i == 1) {\n      cy.wrap($headers[i]).click().should('be.visible').and('contain.text', 'Single line code');\n    } else if (i == 2) {\n      cy.wrap($headers[i]).click().should('be.visible').and('contain.text', 'chain the methods');\n    } else if (i == 3) {\n      cy.wrap($headers[i]).click().should('be.visible').and('contain.text', 'NTest your web application');\n    }\n  }\n});",
              "err": {},
              "uuid": "7c2609ab-b8c7-44cc-8c59-999b3fbafcc7",
              "parentUUID": "0c21b909-58a6-4f1b-a005-1575243cd114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify autocomplete widget",
              "fullTitle": "Access the widgets and verify thier functionalities Verify autocomplete widget",
              "timedOut": null,
              "duration": 2712,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/AutoComplete.html');\ncy.get('#searchbox').should('be.enabled').type('Ind');\n// //trying to include all the result in an array & then iterate through each element\ncy.get(\"ul> li[role='presentation']\").each(function ($ele, index, $list) {\n  if ($ele.text() == \"India\") {\n    cy.wrap($ele).click({\n      force: true\n    });\n  } else {\n    cy.log($ele.text());\n  }\n});\ncy.get('.ui-autocomplete-multiselect').should('contain.text', 'India');",
              "err": {},
              "uuid": "6bdf40ec-c93f-4c4e-ac02-228063935685",
              "parentUUID": "0c21b909-58a6-4f1b-a005-1575243cd114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Datepicker widget One",
              "fullTitle": "Access the widgets and verify thier functionalities Verify Datepicker widget One",
              "timedOut": null,
              "duration": 6551,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Datepicker.html');\n//get date picker element\ncy.get('#datepicker1').click();\n//get calendar :#ui-datepicker-div\ncy.get('#ui-datepicker-div').should('be.visible');\n//calling methods to select date, we will declare them in command.js\ncy.selectYear(2022);\ncy.selectMonth('January');\ncy.selectOneDay(7);\ncy.get('#datepicker1').should('be.visible');",
              "err": {},
              "uuid": "03208799-bd4d-45ac-bb4b-f01a62e27b96",
              "parentUUID": "0c21b909-58a6-4f1b-a005-1575243cd114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Datepicker widget Two",
              "fullTitle": "Access the widgets and verify thier functionalities Verify Datepicker widget Two",
              "timedOut": null,
              "duration": 2403,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Datepicker.html');\n//get date picker element\ncy.get('#datepicker2').click().type('10/10/2020{enter}').should('be.visible');",
              "err": {},
              "uuid": "648c1ea4-a8d7-42f7-9b49-bb1997227c8c",
              "parentUUID": "0c21b909-58a6-4f1b-a005-1575243cd114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Slider widget",
              "fullTitle": "Access the widgets and verify thier functionalities Verify Slider widget",
              "timedOut": null,
              "duration": 1798,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Slider.html');\ncy.get('#slider').invoke('attr', 'style', 'left: 84%;').should('have.attr', 'style', 'left: 84%;');",
              "err": {},
              "uuid": "4f1e25bf-1804-419e-9327-fe763a5dc503",
              "parentUUID": "0c21b909-58a6-4f1b-a005-1575243cd114",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c2609ab-b8c7-44cc-8c59-999b3fbafcc7",
            "6bdf40ec-c93f-4c4e-ac02-228063935685",
            "03208799-bd4d-45ac-bb4b-f01a62e27b96",
            "648c1ea4-a8d7-42f7-9b49-bb1997227c8c",
            "4f1e25bf-1804-419e-9327-fe763a5dc503"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1a418289-d267-40ee-b276-f8d175c7cc48",
      "title": "",
      "fullFile": "cypress/e2e/windows.cy.js",
      "file": "cypress/e2e/windows.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f42479c-e232-45be-b7c3-7dff5be09bd2",
          "title": "Access the windows and verify the functionality of the three window options provided",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify new tab window",
              "fullTitle": "Access the windows and verify the functionality of the three window options provided Verify new tab window",
              "timedOut": null,
              "duration": 8592,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cypress.config('pageLoadTimeout', 10000);\ncy.window().document().then(function (doc) {\n  doc.addEventListener('click', () => {\n    // this adds a listener that reloads your page \n    // after 5 seconds from clicking the download button\n    setTimeout(function () {\n      doc.location.reload();\n    }, 5000);\n  });\n});\ncy.get(\"[href='#Tabbed']\").click();\n// // remove the target via dev tools, the link properly opens in the same browser tab. \n// // But this doesn't happen when I use invoke('removeAttr', 'target')\ncy.get(\"[href='http://www.selenium.dev']\").invoke(\"removeAttr\", \"target\").click();\n//validating the new page\ncy.get('h1').should('contains.text', 'Selenium automates browsers');",
              "err": {},
              "uuid": "da2a1564-138c-4a40-81cd-966277824a44",
              "parentUUID": "0f42479c-e232-45be-b7c3-7dff5be09bd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify new seperate window",
              "fullTitle": "Access the windows and verify the functionality of the three window options provided Verify new seperate window",
              "timedOut": null,
              "duration": 344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(2) > .analystic').click();\ncy.window().then(function (win) {\n  cy.stub(win, 'open').returns(url => {\n    win.location.href = 'https://www.selenium.dev/';\n  }).as(\"popup\");\n});\ncy.get('a > .btn').click();\ncy.get('@popup').should(\"be.called\");\n//validating the new page\ncy.get('h1').should('contain.text', 'Selenium');",
              "err": {
                "message": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > Cannot read properties of null (reading 'reload')\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Access the windows and veri...`",
                "estack": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > Cannot read properties of null (reading 'reload')\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Access the windows and veri...`\n    at eval (webpack:///./cypress/e2e/windows.cy.js:19:54)",
                "diff": null
              },
              "uuid": "af06b6bc-5c0c-49fa-99ac-701ae4f98ac6",
              "parentUUID": "0f42479c-e232-45be-b7c3-7dff5be09bd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify multiple window box",
              "fullTitle": "Access the windows and verify the functionality of the three window options provided Verify multiple window box",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[href='#Multiple']\").click();\ncy.get('#Multiple > .btn').invoke(\"removeAttr\", \"onclick\").click();",
              "err": {},
              "uuid": "eec05fd0-7aae-4521-ad1e-2ea414227cbb",
              "parentUUID": "0f42479c-e232-45be-b7c3-7dff5be09bd2",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "da2a1564-138c-4a40-81cd-966277824a44"
          ],
          "failures": [
            "af06b6bc-5c0c-49fa-99ac-701ae4f98ac6"
          ],
          "pending": [],
          "skipped": [
            "eec05fd0-7aae-4521-ad1e-2ea414227cbb"
          ],
          "duration": 8936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}