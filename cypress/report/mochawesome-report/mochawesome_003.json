{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-10T06:50:27.704Z",
    "end": "2023-04-10T06:50:32.403Z",
    "duration": 4699,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aafcced7-e0b1-4d60-b420-a23a27312a64",
      "title": "",
      "fullFile": "cypress/e2e/dragNdrop.cy.js",
      "file": "cypress/e2e/dragNdrop.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1dc0d2db-fe13-46f8-bda6-addf5de1c852",
          "title": "Verify the functionality of both static and dynamic drag and drop options",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify static drag & drop",
              "fullTitle": "Verify the functionality of both static and dynamic drag and drop options Verify static drag & drop",
              "timedOut": null,
              "duration": 2309,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Static.html');\n//drag the first logo in the field\ncy.get('#angular').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #angular').should('have.attr', 'id', 'angular');\n//dragging the second logo\ncy.get('#mongo').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #mongo').should('have.attr', 'id', 'mongo');\n//dragging the second logo\ncy.get('#node').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\n// cy.get('#node').drag('#droparea')\ncy.get('.dragged > #node').should('have.attr', 'id', 'node');",
              "err": {},
              "uuid": "a8831a1f-1ce4-4b4a-936e-989e0e8a43a4",
              "parentUUID": "1dc0d2db-fe13-46f8-bda6-addf5de1c852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dynamic drag & drop",
              "fullTitle": "Verify the functionality of both static and dynamic drag and drop options Verify dynamic drag & drop",
              "timedOut": null,
              "duration": 1089,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demo.automationtesting.in/Dynamic.html');\n//drag the first logo in the field\ncy.get('#angular').drag('#droparea').then(success => {\n  assert.isTrue(success);\n});\ncy.get('.dragged > #angular').should('have.attr', 'id', 'angular');\n//dragging the second logo\ncy.get('#mongo').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\ncy.get('.dragged > #mongo').should('have.attr', 'id', 'mongo');\n//dragging the third logo\ncy.get('#node').trigger('dragstart', {\n  dataTransfer\n});\ncy.get('#droparea').trigger('drop', {\n  dataTransfer\n});\n// cy.get('#node').drag('#droparea')\ncy.get('.dragged > #node').should('have.attr', 'id', 'node');",
              "err": {},
              "uuid": "5f94f164-d2f8-4154-b828-1318a2847acf",
              "parentUUID": "1dc0d2db-fe13-46f8-bda6-addf5de1c852",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8831a1f-1ce4-4b4a-936e-989e0e8a43a4",
            "5f94f164-d2f8-4154-b828-1318a2847acf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}